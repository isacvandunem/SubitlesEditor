/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subitleseditor;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 *
 * @author isacv
 */
public class MainUI extends javax.swing.JFrame implements Notifier{

    private SubtitlesManager subManager;
    private int selectedEncodingIndex = 1;
    
    private List<javax.swing.JCheckBoxMenuItem> encodingItems;
    
    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        subManager = new SubtitlesManager();
        subManager.addNotifier(this);

        encodingItems = new ArrayList<>();
        encodingItems.add(menuItemUTF8);
        encodingItems.add(menuItemWindows1252);
        encodingItems.add(menuItemISO88591);
        
        encodingItems.get(selectedEncodingIndex).setSelected(true);
        
        for (JMenuItem mi : encodingItems){
            mi.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    for (int i = 0; i < encodingItems.size(); ++i){
                        javax.swing.JCheckBoxMenuItem mi2 = encodingItems.get(i);
                        
                        if (mi2.equals(mi)){
                            mi2.setSelected(true);
                            selectedEncodingIndex = i;
                            subManager.setEncoding(mi2.getText());
                            
                            notifyAction("Encoding changed to " + mi2.getText());
                        }
                        else {
                            mi2.setSelected(false);
                        }
                    }
                }
            });
        }
        
        subManager.setEncoding(encodingItems.get(selectedEncodingIndex).getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bLoadFile = new javax.swing.JButton();
        labelLoadedFile = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textCurrentSubtitles = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        bDelay = new javax.swing.JButton();
        textSeconds = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textMilliSeconds = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bSave = new javax.swing.JButton();
        bAdvance = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textFromSub = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textToSub = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        textMinutes = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textTargetDynamicSub = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textDynamicMilliSeconds = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textDynamicMinutes = new javax.swing.JTextField();
        bDynamicAdvance = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        bDynamicDelay = new javax.swing.JButton();
        textDynamicSeconds = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemOpen = new javax.swing.JMenuItem();
        menuItemSave = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        menuEncoding = new javax.swing.JMenu();
        menuItemUTF8 = new javax.swing.JCheckBoxMenuItem();
        menuItemWindows1252 = new javax.swing.JCheckBoxMenuItem();
        menuItemISO88591 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Loaded File :");

        bLoadFile.setText("Open");
        bLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadFileActionPerformed(evt);
            }
        });

        labelLoadedFile.setText("No File");

        textCurrentSubtitles.setColumns(20);
        textCurrentSubtitles.setRows(5);
        jScrollPane1.setViewportView(textCurrentSubtitles);

        jLabel2.setText("Current Subtitles");

        bDelay.setText("Show Later by");
        bDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelayActionPerformed(evt);
            }
        });

        jLabel4.setText("Seconds");

        jLabel5.setText("Milliseconds");

        bSave.setText(" Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bAdvance.setText("Show Earlier by");
        bAdvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAdvanceActionPerformed(evt);
            }
        });

        jLabel6.setText("Apply to Subtibles ranging from");
        jLabel6.setToolTipText("Not specifying a range applies to all");

        jLabel7.setText("To");

        textToSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textToSubActionPerformed(evt);
            }
        });

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Equal adjustments to all selected subtitles:");

        textMinutes.setPreferredSize(new java.awt.Dimension(20, 24));

        jLabel14.setText("Minutes");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Dynamic adjustments");

        jLabel10.setText("Make the target subtitle show earlier or later by adjusting all the remaining times proportionally");
        jLabel10.setToolTipText("");

        jLabel11.setText("Target Subtitle");

        jLabel12.setText("Seconds");

        jLabel13.setText("Milliseconds");

        textDynamicMinutes.setPreferredSize(new java.awt.Dimension(20, 24));

        bDynamicAdvance.setText("Show Earlier by");
        bDynamicAdvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDynamicAdvanceActionPerformed(evt);
            }
        });

        jLabel15.setText("Minutes");

        bDynamicDelay.setText("Show Later by");
        bDynamicDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDynamicDelayActionPerformed(evt);
            }
        });

        menuFile.setText("File");

        menuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemOpen.setText("Open");
        menuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOpenActionPerformed(evt);
            }
        });
        menuFile.add(menuItemOpen);

        menuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSave.setText("Save");
        menuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveActionPerformed(evt);
            }
        });
        menuFile.add(menuItemSave);

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuFile.add(menuItemExit);

        jMenuBar1.add(menuFile);

        menuEncoding.setText("Encoding");

        menuItemUTF8.setText("UTF-8");
        menuEncoding.add(menuItemUTF8);

        menuItemWindows1252.setText("Windows-1252");
        menuEncoding.add(menuItemWindows1252);

        menuItemISO88591.setText("ISO-8859-1");
        menuEncoding.add(menuItemISO88591);

        jMenuBar1.add(menuEncoding);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(6, 6, 6)
                                        .addComponent(textFromSub, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7)
                                        .addGap(12, 12, 12)
                                        .addComponent(textToSub, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textTargetDynamicSub, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(bAdvance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bDelay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(28, 28, 28)
                                        .addComponent(textMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addGap(51, 51, 51)
                                        .addComponent(textSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addGap(46, 46, 46)
                                        .addComponent(textMilliSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(bDynamicAdvance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bDynamicDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addComponent(textDynamicMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGap(53, 53, 53)
                                        .addComponent(textDynamicSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12)
                                        .addGap(49, 49, 49)
                                        .addComponent(textDynamicMilliSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)))
                                .addGap(0, 311, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelLoadedFile))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(bLoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelLoadedFile))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLoadFile)
                    .addComponent(bSave))
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bDelay)
                            .addComponent(textSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(textMilliSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(textMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAdvance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFromSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(textToSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(textTargetDynamicSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bDynamicDelay)
                            .addComponent(textDynamicSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(textDynamicMilliSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(textDynamicMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDynamicAdvance)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bLoadFile.getAccessibleContext().setAccessibleName("selectFile");
        labelLoadedFile.getAccessibleContext().setAccessibleName("selectedFileLabel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void notifyAction(String action){
        statusLabel.setText(action);
    }
    
    public void severeNotifyAction(String message){
        JOptionPane.showMessageDialog(this, message);
    }
    
    private void loadFile(){
        JFileChooser input = new javax.swing.JFileChooser();
        int result = input.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            
            subManager.setFilePath(input.getSelectedFile().toString());
            subManager.readFromFile();
            
            labelLoadedFile.setText(subManager.getFilePath());
            setTitle("Subtitle Editor - " + subManager.getFilePath());
            textCurrentSubtitles.setText(subManager.subsToText());
                
            textFromSub.setText("" + subManager.getFirstSubNumber());
            textToSub.setText("" + subManager.getLastSubNumber());
            
            textTargetDynamicSub.setText("" + subManager.getLastSubNumber());
               
        } else if (result == JFileChooser.CANCEL_OPTION) {
            notifyAction("File loading canceled");
        }
    }
    private void bLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadFileActionPerformed

        loadFile();
    }//GEN-LAST:event_bLoadFileActionPerformed

    private TimeUpdateValues readTextValues(JTextField tMinutes, JTextField tSeconds, JTextField tMilliSeconds){
        int minutes = 0;
        int seconds = 0;
        int millis = 0;
        
        try {
            if (tMinutes.getText().length() > 0){
                minutes = Integer.parseInt(tMinutes.getText());    
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "The minutes value must be a number");
            return null;
        }
        
        try {
            if (tSeconds.getText().length() > 0){
                seconds = Integer.parseInt(tSeconds.getText());    
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "The seconds value must be a number");
            return null;
        }
        
        try {
            if (tMilliSeconds.getText().length() > 0){
                millis = Integer.parseInt(tMilliSeconds.getText());    
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "The milliseconds value must be a number");
            return null;
        }
        
        return new TimeUpdateValues(minutes, seconds, millis);
    }
    
    private void updateSubs(boolean positiveValues){
        TimeUpdateValues tuv = readTextValues(textMinutes, textSeconds, textMilliSeconds);
        
        if (tuv == null || tuv.allZeros()){
            return;
        }
        
        if (positiveValues){
            tuv.setPositiveTimes();    
        } 
        else {
            tuv.setNegativeTimes();
        }
        
        int min = subManager.getFirstSubNumber();
        int max = subManager.getLastSubNumber();
        
        if (textFromSub.getText().length() > 0){
            try  {
                min = Integer.parseInt(textFromSub.getText());
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "The sub range lower bound must be a number");
            }
        }
        
        if (textToSub.getText().length() > 0){
            try  {
                max = Integer.parseInt(textToSub.getText());
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "The sub range upper bound must be a number");
            }
        }
        
        subManager.updateRangedSubs(tuv.getMinutes(), tuv.getSeconds(), tuv.getMilliseconds(), min , max);
        textCurrentSubtitles.setText(subManager.subsToText());
    }
    
    private void updateSubsDynamic(boolean positiveValues){
        TimeUpdateValues tuv = readTextValues(textDynamicMinutes, textDynamicSeconds, textDynamicMilliSeconds);
        
        if (tuv == null || tuv.allZeros()){
            return;
        }
        
        if (positiveValues){
            tuv.setPositiveTimes();
        }
        else {
            tuv.setNegativeTimes();    
        }
        
        try {
            int targetSub = Integer.parseInt(textTargetDynamicSub.getText());
            
            subManager.updateSubsProprortionally(tuv.getMinutes(), tuv.getSeconds(), tuv.getMilliseconds(), targetSub);
            textCurrentSubtitles.setText(subManager.subsToText());
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "The target subtitle must the number of the subtitle to update");
        }
    }
    
    private void bDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelayActionPerformed
        updateSubs(true);
    }//GEN-LAST:event_bDelayActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        subManager.writeToFile();
    }//GEN-LAST:event_bSaveActionPerformed

    private void bAdvanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAdvanceActionPerformed

        updateSubs(false);
    }//GEN-LAST:event_bAdvanceActionPerformed

    private void textToSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textToSubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textToSubActionPerformed
    
    private void bDynamicAdvanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDynamicAdvanceActionPerformed
        updateSubsDynamic(false);
    }//GEN-LAST:event_bDynamicAdvanceActionPerformed

    private void bDynamicDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDynamicDelayActionPerformed
        updateSubsDynamic(true);
    }//GEN-LAST:event_bDynamicDelayActionPerformed

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOpenActionPerformed
        loadFile();
    }//GEN-LAST:event_menuItemOpenActionPerformed

    private void menuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveActionPerformed
        subManager.writeToFile();
    }//GEN-LAST:event_menuItemSaveActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdvance;
    private javax.swing.JButton bDelay;
    private javax.swing.JButton bDynamicAdvance;
    private javax.swing.JButton bDynamicDelay;
    private javax.swing.JButton bLoadFile;
    private javax.swing.JButton bSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelLoadedFile;
    private javax.swing.JMenu menuEncoding;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JCheckBoxMenuItem menuItemISO88591;
    private javax.swing.JMenuItem menuItemOpen;
    private javax.swing.JMenuItem menuItemSave;
    private javax.swing.JCheckBoxMenuItem menuItemUTF8;
    private javax.swing.JCheckBoxMenuItem menuItemWindows1252;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextArea textCurrentSubtitles;
    private javax.swing.JTextField textDynamicMilliSeconds;
    private javax.swing.JTextField textDynamicMinutes;
    private javax.swing.JTextField textDynamicSeconds;
    private javax.swing.JTextField textFromSub;
    private javax.swing.JTextField textMilliSeconds;
    private javax.swing.JTextField textMinutes;
    private javax.swing.JTextField textSeconds;
    private javax.swing.JTextField textTargetDynamicSub;
    private javax.swing.JTextField textToSub;
    // End of variables declaration//GEN-END:variables
}
